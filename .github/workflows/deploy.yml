name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      STACK_NAME: 'bikepacker-tracker-backend'
      AWS_REGION: 'eu-west-2'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set ECR Repository URI
        run: |
          echo "ECR_REPOSITORY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$STACK_NAME" >> $GITHUB_ENV

      - name: Navigate to the project directory
        run: |
            cd backend
            ls -a

      - name: Build Docker image
        run: |
          ls -a
          docker build -t $STACK_NAME .
          docker tag $STACK_NAME $ECR_REPOSITORY:$IMAGE_TAG
          docker tag $STACK_NAME $ECR_REPOSITORY:latest

      - name: Create ECR repository if it doesn't exist
        run: |
          if ! aws ecr describe-repositories --repository-names $STACK_NAME 2>/dev/null; then
            echo "Creating ECR repository $STACK_NAME"
            aws ecr create-repository --repository-name $STACK_NAME
          fi

      - name: Push Docker image to ECR
        run: |
          echo "Pushing image to ECR: $ECR_REPOSITORY:$IMAGE_TAG"
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REPOSITORY:latest

      - name: Deploy to AWS CloudFormation
        run: |
          echo "Deploying stack $STACK_NAME to region $AWS_REGION"
          aws cloudformation deploy \
            --capabilities CAPABILITY_IAM \
            --stack-name $STACK_NAME \
            --template-file template.yaml \
            --region $AWS_REGION \
            --parameter-overrides \
              ImageUri="$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Get API Gateway URL
        run: |
          echo "API Gateway URL:"
          aws cloudformation describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[?ExportName=='$STACK_NAME-ApiEndpoint'].OutputValue" --output text