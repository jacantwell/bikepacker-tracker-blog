name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.cfn-output.outputs.bucket_name }}
      distribution_id: ${{ steps.cfn-output.outputs.distribution_id }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file frontend/cloudformation-stack.yml \
            --stack-name react-app-stack \
            --parameter-overrides \
              DomainName=${{ secrets.DOMAIN_NAME }} \
              HostedZoneId=${{ secrets.HOSTED_ZONE_ID }} \
            --capabilities CAPABILITY_IAM
      
      - name: Get CloudFormation Outputs
        id: cfn-output
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name react-app-stack --query "Stacks[0].Outputs[?OutputKey=='BucketName'].OutputValue" --output text)
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name react-app-stack --query "Stacks[0].Outputs[?OutputKey=='DistributionId'].OutputValue" --output text)
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: deploy-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          
      - name: Deploy to S3
        run: aws s3 sync build/ s3://${{ needs.deploy-frontend.outputs.bucket_name }} --delete
        
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ needs.deploy-frontend.outputs.distribution_id }} --paths "/*"